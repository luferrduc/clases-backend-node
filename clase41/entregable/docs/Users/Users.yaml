# paths:
#   /api/users:
#     get:
#       summary: Este servicio obtiene el listado de todos los usuarios
#       # El tag es un identificador que indica a donde (el recurso) pertence el servicio
#       tags:
#         - Users
#       responses:
#         "200":
#           description: Los usuarios fueron obtenidos satisfactoriamente de la base de datos
#           content:
#             application/json:
#               schema: 
#                 type: array
#                 items: 
#                   $ref: '#components/schemas/User'
#         "500":
#           description: Error interno del servidor, usualmente generardo por una query defectuosa o un fallo en la conexión a la base de datos
#   /api/users/{uid}:
#     get:
#       summary: Este servicio obtiene un solo usuario a partir de su uid (identificador único del usuario)
#       tags:
#         - Users
#       parameters: 
#         - name: uid
#           in: path
#           required: true
#           description: El id del usuario a buscar
#           schema:
#             $type: String
#       responses:
#         "200":
#           description: El usuario fue obtenido correctamente de la base de datos
#           contents:
#             application/json:
#               schema: 
#                 $ref: '#components/schemas/User'
#         "500":
#           description: Error interno del servidor, usualmente generardo por una query defectuosa o un fallo en la conexión a la base de datos
#     put:
#       summary: Este servicio actualiza el solo usuario a partir de su uid (identificador único del usuario)
#       tags:
#         - Users
#       security: 
#       - bearerAuth: []
#       parameters: 
#         - name: uid
#           in: path
#           required: true
#           description: El id del usuario que se quiere actualizar
#           schema:
#             $type: String
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema: 
#               $ref: '#components/requestBodies/updateUser'
#       responses:
#         "200":
#           description: El usuario fue actualizado correctamente
#           content:
#             application/json:
#               schema: 
#                 $ref: '#components/schemas/User'
#         "404":
#           description: El usuario no fue encontrado       
#         "500":
#           description: Error interno del servidor, usualmente generardo por una query defectuosa o un fallo en la conexión a la base de datos              
# components:
#   schemas:
#     User:
#       type: Object
#       properties: 
#         _id:
#           type: ObjectId
#           description: Id autogenerado por mongodb, es el id del usuario
#         first_name:
#           type: String
#           description: Nombre del usuario
#         last_name:
#           type: String
#           description: Apellido del usuario
#         email:
#           type: String
#           description: Correo electrónico del usuario
#         password:
#           type: String
#           description: Password del usuario
#         rol:
#           type: String
#           description: Rol del usuario
#       example:
#         _id: ObjectId("sadasddsa-asdasd-asdasd")
#         first_name: Coder
#         last_name: House
#         email: coder.house@gmail.com
#         password: Asd$asd#$@$ASDdhvuaas3d7vha#AAdgh%
#         rol: admin
#   requestBodies:
#     updateUser:
#       type: Object
#       properties:
#         first_name:
#           type: String
#           description: Nombre del usuario
#         last_name:
#           type: String
#           description: Apellido del usuario
#         email:
#           type: String
#           description: Correo electrónico del usuario
#         password:
#           type: String
#           description: Password del usuario
#         rol:
#           type: String
#           description: Rol del usuario
#       example:       
#         first_name: Coder
#         last_name: House
#         email: coder.house@gmail.com
#         password: Asd$asd#$@$ASDdhvuaas3d7vha#AAdgh%
#         rol: admin
#   securitySchemes:
#     bearerAuth:
#       type: http
#       scheme: bearer
#       bearerFormat: JWT